% forces - a fast interior point code generated by FORCES
%
%   OUTPUT = forces(PARAMS) solves a multistage problem
%   subject to the parameters supplied in the following struct:
%       PARAMS.H1 - matrix of size [8 x 8]
%       PARAMS.f1 - column vector of length 8
%       PARAMS.lb1 - column vector of length 8
%       PARAMS.ub1 - column vector of length 8
%       PARAMS.C1 - matrix of size [6 x 8]
%       PARAMS.d1 - column vector of length 6
%       PARAMS.H2 - matrix of size [8 x 8]
%       PARAMS.f2 - column vector of length 8
%       PARAMS.lb2 - column vector of length 8
%       PARAMS.ub2 - column vector of length 8
%       PARAMS.C2 - matrix of size [6 x 8]
%       PARAMS.d2 - column vector of length 6
%       PARAMS.H3 - matrix of size [8 x 8]
%       PARAMS.f3 - column vector of length 8
%       PARAMS.lb3 - column vector of length 8
%       PARAMS.ub3 - column vector of length 8
%       PARAMS.C3 - matrix of size [6 x 8]
%       PARAMS.d3 - column vector of length 6
%       PARAMS.H4 - matrix of size [8 x 8]
%       PARAMS.f4 - column vector of length 8
%       PARAMS.lb4 - column vector of length 8
%       PARAMS.ub4 - column vector of length 8
%       PARAMS.C4 - matrix of size [6 x 8]
%       PARAMS.d4 - column vector of length 6
%       PARAMS.H5 - matrix of size [8 x 8]
%       PARAMS.f5 - column vector of length 8
%       PARAMS.lb5 - column vector of length 8
%       PARAMS.ub5 - column vector of length 8
%       PARAMS.C5 - matrix of size [6 x 8]
%       PARAMS.d5 - column vector of length 6
%       PARAMS.H6 - matrix of size [8 x 8]
%       PARAMS.f6 - column vector of length 8
%       PARAMS.lb6 - column vector of length 8
%       PARAMS.ub6 - column vector of length 8
%       PARAMS.C6 - matrix of size [6 x 8]
%       PARAMS.d6 - column vector of length 6
%       PARAMS.H7 - matrix of size [8 x 8]
%       PARAMS.f7 - column vector of length 8
%       PARAMS.lb7 - column vector of length 8
%       PARAMS.ub7 - column vector of length 8
%       PARAMS.C7 - matrix of size [6 x 8]
%       PARAMS.d7 - column vector of length 6
%       PARAMS.H8 - matrix of size [8 x 8]
%       PARAMS.f8 - column vector of length 8
%       PARAMS.lb8 - column vector of length 8
%       PARAMS.ub8 - column vector of length 8
%       PARAMS.C8 - matrix of size [6 x 8]
%       PARAMS.d8 - column vector of length 6
%       PARAMS.H9 - matrix of size [8 x 8]
%       PARAMS.f9 - column vector of length 8
%       PARAMS.lb9 - column vector of length 8
%       PARAMS.ub9 - column vector of length 8
%       PARAMS.C9 - matrix of size [6 x 8]
%       PARAMS.d9 - column vector of length 6
%       PARAMS.H10 - matrix of size [8 x 8]
%       PARAMS.f10 - column vector of length 8
%       PARAMS.lb10 - column vector of length 8
%       PARAMS.ub10 - column vector of length 8
%       PARAMS.C10 - matrix of size [6 x 8]
%       PARAMS.d10 - column vector of length 6
%       PARAMS.H11 - matrix of size [8 x 8]
%       PARAMS.f11 - column vector of length 8
%       PARAMS.lb11 - column vector of length 8
%       PARAMS.ub11 - column vector of length 8
%       PARAMS.C11 - matrix of size [6 x 8]
%       PARAMS.d11 - column vector of length 6
%       PARAMS.H12 - matrix of size [8 x 8]
%       PARAMS.f12 - column vector of length 8
%       PARAMS.lb12 - column vector of length 8
%       PARAMS.ub12 - column vector of length 8
%       PARAMS.C12 - matrix of size [6 x 8]
%       PARAMS.d12 - column vector of length 6
%       PARAMS.H13 - matrix of size [8 x 8]
%       PARAMS.f13 - column vector of length 8
%       PARAMS.lb13 - column vector of length 8
%       PARAMS.ub13 - column vector of length 8
%       PARAMS.C13 - matrix of size [6 x 8]
%       PARAMS.d13 - column vector of length 6
%       PARAMS.H14 - matrix of size [8 x 8]
%       PARAMS.f14 - column vector of length 8
%       PARAMS.lb14 - column vector of length 8
%       PARAMS.ub14 - column vector of length 8
%       PARAMS.C14 - matrix of size [6 x 8]
%       PARAMS.d14 - column vector of length 6
%       PARAMS.H15 - matrix of size [8 x 8]
%       PARAMS.f15 - column vector of length 8
%       PARAMS.lb15 - column vector of length 8
%       PARAMS.ub15 - column vector of length 8
%       PARAMS.C15 - matrix of size [6 x 8]
%       PARAMS.d15 - column vector of length 6
%       PARAMS.H16 - matrix of size [8 x 8]
%       PARAMS.f16 - column vector of length 8
%       PARAMS.lb16 - column vector of length 8
%       PARAMS.ub16 - column vector of length 8
%       PARAMS.C16 - matrix of size [6 x 8]
%       PARAMS.d16 - column vector of length 6
%       PARAMS.H17 - matrix of size [8 x 8]
%       PARAMS.f17 - column vector of length 8
%       PARAMS.lb17 - column vector of length 8
%       PARAMS.ub17 - column vector of length 8
%       PARAMS.C17 - matrix of size [6 x 8]
%       PARAMS.d17 - column vector of length 6
%       PARAMS.H18 - matrix of size [8 x 8]
%       PARAMS.f18 - column vector of length 8
%       PARAMS.lb18 - column vector of length 8
%       PARAMS.ub18 - column vector of length 8
%       PARAMS.C18 - matrix of size [6 x 8]
%       PARAMS.d18 - column vector of length 6
%       PARAMS.H19 - matrix of size [8 x 8]
%       PARAMS.f19 - column vector of length 8
%       PARAMS.lb19 - column vector of length 8
%       PARAMS.ub19 - column vector of length 8
%       PARAMS.C19 - matrix of size [6 x 8]
%       PARAMS.d19 - column vector of length 6
%       PARAMS.H20 - matrix of size [8 x 8]
%       PARAMS.f20 - column vector of length 8
%       PARAMS.lb20 - column vector of length 8
%       PARAMS.ub20 - column vector of length 8
%       PARAMS.C20 - matrix of size [6 x 8]
%       PARAMS.d20 - column vector of length 6
%       PARAMS.H21 - matrix of size [6 x 6]
%       PARAMS.f21 - column vector of length 6
%       PARAMS.lb21 - column vector of length 6
%       PARAMS.ub21 - column vector of length 6
%       PARAMS.d21 - column vector of length 6
%       PARAMS.z_init_00 - column vector of length 8
%       PARAMS.z_init_01 - column vector of length 8
%       PARAMS.z_init_02 - column vector of length 8
%       PARAMS.z_init_03 - column vector of length 8
%       PARAMS.z_init_04 - column vector of length 8
%       PARAMS.z_init_05 - column vector of length 8
%       PARAMS.z_init_06 - column vector of length 8
%       PARAMS.z_init_07 - column vector of length 8
%       PARAMS.z_init_08 - column vector of length 8
%       PARAMS.z_init_09 - column vector of length 8
%       PARAMS.z_init_10 - column vector of length 8
%       PARAMS.z_init_11 - column vector of length 8
%       PARAMS.z_init_12 - column vector of length 8
%       PARAMS.z_init_13 - column vector of length 8
%       PARAMS.z_init_14 - column vector of length 8
%       PARAMS.z_init_15 - column vector of length 8
%       PARAMS.z_init_16 - column vector of length 8
%       PARAMS.z_init_17 - column vector of length 8
%       PARAMS.z_init_18 - column vector of length 8
%       PARAMS.z_init_19 - column vector of length 8
%       PARAMS.z_init_20 - column vector of length 6
%
%   OUTPUT returns the values of the last iteration of the solver where
%       OUTPUT.out1 - column vector of size 8
%       OUTPUT.out2 - column vector of size 8
%       OUTPUT.out3 - column vector of size 8
%       OUTPUT.out4 - column vector of size 8
%       OUTPUT.out5 - column vector of size 8
%       OUTPUT.out6 - column vector of size 8
%       OUTPUT.out7 - column vector of size 8
%       OUTPUT.out8 - column vector of size 8
%       OUTPUT.out9 - column vector of size 8
%       OUTPUT.out10 - column vector of size 8
%       OUTPUT.out11 - column vector of size 8
%       OUTPUT.out12 - column vector of size 8
%       OUTPUT.out13 - column vector of size 8
%       OUTPUT.out14 - column vector of size 8
%       OUTPUT.out15 - column vector of size 8
%       OUTPUT.out16 - column vector of size 8
%       OUTPUT.out17 - column vector of size 8
%       OUTPUT.out18 - column vector of size 8
%       OUTPUT.out19 - column vector of size 8
%       OUTPUT.out20 - column vector of size 8
%       OUTPUT.out21 - column vector of size 6
%
%   [OUTPUT, EXITFLAG] = forces(PARAMS) returns additionally
%   the integer EXITFLAG indicating the state of the solution with 
%       1 - OPTIMAL solution has been found (subject to desired accuracy)
%       0 - Timeout - maximum number of iterations reached
%      -7 - Method could not progress. Problem may be infeasible. Run FORCESdiagnostics on your problem to check for most common errors in the formulation.
%    -100 - License error
%
%   [OUTPUT, EXITFLAG, INFO] = forces(PARAMS) returns 
%   additional information about the last iterate:
%       INFO.it        - number of iterations that lead to this result
%       INFO.res_eq    - max. equality constraint residual
%       INFO.res_ineq  - max. inequality constraint residual
%       INFO.pobj      - primal objective
%       INFO.dobj      - dual objective
%       INFO.dgap      - duality gap := pobj - dobj
%       INFO.rdgap     - relative duality gap := |dgap / pobj|
%       INFO.mu        - duality measure
%       INFO.sigma     - centering parameter
%       INFO.lsit_aff  - iterations of affine line search
%       INFO.lsit_cc   - iterations of line search (combined direction)
%       INFO.step_aff  - step size (affine direction)
%       INFO.step_cc   - step size (centering direction)
%       INFO.solvetime - Time needed for solve (wall clock time)
%
% See also COPYING
